#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã reverse proxy
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Caddy

echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Reverse Proxy"
echo "================================="

DOMAIN=${1:-"api.example.com"}
echo "üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –¥–æ–º–µ–Ω: $DOMAIN"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP –æ—Ç–≤–µ—Ç–∞
check_endpoint() {
    local url=$1
    local expected_code=${2:-200}
    local description=$3
    
    echo -n "üîç $description: "
    
    response=$(curl -s -o /dev/null -w "%{http_code}" -m 10 "$url" 2>/dev/null)
    
    if [ "$response" = "$expected_code" ]; then
        echo "‚úÖ $response"
        return 0
    else
        echo "‚ùå $response (–æ–∂–∏–¥–∞–ª—Å—è $expected_code)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
check_redirect() {
    local url=$1
    local expected_location=$2
    local description=$3
    
    echo -n "üîÄ $description: "
    
    location=$(curl -s -I -m 10 "$url" | grep -i "location:" | awk '{print $2}' | tr -d '\r\n')
    
    if [[ "$location" == *"$expected_location"* ]]; then
        echo "‚úÖ $location"
        return 0
    else
        echo "‚ùå $location (–æ–∂–∏–¥–∞–ª—Å—è $expected_location)"
        return 1
    fi
}

echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:"
echo "--------------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
check_redirect "http://$DOMAIN" "https://$DOMAIN" "HTTP ‚Üí HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
check_endpoint "https://$DOMAIN/api/health/liveness" 200 "Health Liveness"
check_endpoint "https://$DOMAIN/api/health/readiness" 200 "Health Readiness"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ metrics –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
check_endpoint "https://$DOMAIN/api/metrics" 403 "Metrics (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Swagger –æ—Ç–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–µ
check_endpoint "https://$DOMAIN/api/docs" 404 "Swagger Docs (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
check_redirect "https://$DOMAIN/" "https://$DOMAIN/api/docs" "–ö–æ—Ä–Ω–µ–≤–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ www —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
check_redirect "http://www.$DOMAIN" "https://$DOMAIN" "WWW —Ä–µ–¥–∏—Ä–µ–∫—Ç"

echo ""
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
echo "------------------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
headers_check() {
    local header=$1
    local description=$2
    
    echo -n "üõ°Ô∏è  $description: "
    
    header_value=$(curl -s -I -m 10 "https://$DOMAIN/api/health/liveness" | grep -i "$header" | awk -F': ' '{print $2}' | tr -d '\r\n')
    
    if [ -n "$header_value" ]; then
        echo "‚úÖ $header_value"
    else
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
}

headers_check "X-Content-Type-Options" "X-Content-Type-Options"
headers_check "X-Frame-Options" "X-Frame-Options"
headers_check "Strict-Transport-Security" "HSTS"

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:"
echo "-----------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo -n "üîê SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: "
ssl_info=$(echo | openssl s_client -servername "$DOMAIN" -connect "$DOMAIN:443" 2>/dev/null | openssl x509 -noout -issuer -dates 2>/dev/null)

if [ $? -eq 0 ]; then
    echo "‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
    echo "   $(echo "$ssl_info" | grep "issuer")"
    echo "   $(echo "$ssl_info" | grep "notAfter")"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º"
fi

echo ""
echo "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:"
echo "-------------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞
echo -n "‚ö° –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ API: "
response_time=$(curl -o /dev/null -s -w "%{time_total}s" "https://$DOMAIN/api/health/liveness")
echo "$response_time"

echo ""
echo "üìù –õ–æ–≥–∏ Caddy (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
echo "------------------------------------"

if [ -f "/var/log/caddy/api.log" ]; then
    tail -n 10 /var/log/caddy/api.log
else
    echo "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: /var/log/caddy/api.log"
fi

echo ""
echo "üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ Caddy:"
echo "------------------------"
systemctl status caddy --no-pager -l | head -n 10

echo ""
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ - reverse proxy –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
