services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: books-app:prod
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      NODE_ENV: production
      PORT: ${PORT:-5000}
      HOST: 0.0.0.0
    # Порт 5000 больше не публичный - доступ только через Caddy reverse proxy
    # ports:
    #   - '${PORT:-5000}:5000'
    depends_on:
      - postgres
    healthcheck:
      test:
        - CMD-SHELL
        - node -e "require('http').get('http://localhost:5000/api/metrics',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-books}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  postgres_data_prod:
