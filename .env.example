# Database
# Для docker-compose по умолчанию используется postgres/postgres@localhost:5432/books
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/books?schema=public"
NODE_ENV=development

# Server
# Порт/хост для HTTP сервера Nest (см. main.ts). По умолчанию PORT=5000, HOST=0.0.0.0
# Можно оставить закомментированным, чтобы использовать дефолты из кода.
# PORT=5000
# HOST=0.0.0.0

# JWT
JWT_ACCESS_SECRET="Some_secret_1!*@#"
JWT_ACCESS_EXPIRES_IN=12h
JWT_REFRESH_SECRET="Some_secret_2!*@#"
JWT_REFRESH_EXPIRES_IN=7d

# Roles
# Комма-разделённые списки email для автоматической выдачи ролей при регистрации/логине
ADMIN_EMAILS=admin@example.com
CONTENT_MANAGER_EMAILS=
ROLES_CACHE_TTL_MS=5000

# Language policy
# Default language fallback when not provided and not matched via Accept-Language
# Must be one of Prisma enum Language: en|es|fr|pt (extend via migration when needed)
DEFAULT_LANGUAGE=en

# Публичная база URL для генерации ссылок.
# В SEO/Sitemap при отсутствии переменной используется http://localhost:3000,
# а для локального хранилища (LocalStorageService) — http://localhost:5000/static.
# Если задать это значение здесь, оно повлияет и на SEO/Sitemap, и на публичные ссылки файлов.
LOCAL_PUBLIC_BASE_URL=http://localhost:5000/static

# --- Compose overrides (необязательно менять) ---
# Эти переменные позволяют переопределить порты/настройки сервисов в docker-compose.yml
POSTGRES_DB=books
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432
REDIS_PORT=6379

# --- Sentry (опционально) ---
# Для включения отправки ошибок укажите DSN (получите в проекте Sentry).
# По умолчанию интеграция включается, если задан SENTRY_DSN. Отключить принудительно: SENTRY_ENABLED=0
# SENTRY_DSN=
# SENTRY_ENV=development
# SENTRY_RELEASE=
# SENTRY_TRACES_SAMPLE_RATE=0
# SENTRY_PROFILES_SAMPLE_RATE=0

# --- BullMQ / Queues (опционально) ---
# Redis URL имеет приоритет над хост/порт. Если ни REDIS_URL, ни REDIS_HOST не заданы — очереди будут отключены.
# Пример URL: redis://localhost:6379
# REDIS_URL=
# REDIS_HOST=localhost
# REDIS_PASSWORD=
# BULLMQ_DEMO_QUEUE=demo
# BULLMQ_DEMO_CONCURRENCY=2
# BULLMQ_IN_PROCESS_WORKER=1
# BULLMQ_WORKER_LOG_LEVEL=info
# BULLMQ_WORKER_SHUTDOWN_TIMEOUT_MS=5000

# --- Uploads / limits (опционально, есть дефолты в коде) ---
# LOCAL_UPLOADS_DIR=var/uploads
# UPLOADS_MAX_IMAGE_MB=5
# UPLOADS_MAX_AUDIO_MB=100
# UPLOADS_PRESIGN_TTL_SEC=600
# UPLOADS_ALLOWED_IMAGE_CT=image/jpeg,image/png,image/webp
# UPLOADS_ALLOWED_AUDIO_CT=audio/mpeg,audio/mp4,audio/aac,audio/ogg

# --- Кэш/лимиты (опционально) ---
# VIEWS_CACHE_TTL_MS=30000
# SITEMAP_CACHE_TTL_MS=60000
# SEO_CACHE_TTL_MS=0
# RATE_LIMIT_ENABLED=0
# RATE_LIMIT_COMMENTS_PER_MINUTE=10
# RATE_LIMIT_COMMENTS_WINDOW_MS=60000
# Глобальный троттлинг (все запросы, кроме health/metrics/swagger)
# RATE_LIMIT_GLOBAL_ENABLED=0
# RATE_LIMIT_GLOBAL_MAX=100
# RATE_LIMIT_GLOBAL_WINDOW_MS=60000

# --- CORS (опционально) ---
# Разрешённые origin'ы. Поддерживает:
#  - звездочку (dev): *
#  - один origin: https://app.example.com
#  - список через запятую: https://app.example.com,https://admin.example.com
# В prod используйте белый список, а не "*".
CORS_ORIGIN=*
# Включить credentialed запросы (cookies/Authorization с withCredentials)
# Только при конкретных origin, не используйте вместе со "*".
# 0 — выкл (по умолчанию), 1 — вкл
CORS_CREDENTIALS=0

# --- Лимиты тела (опционально) ---
# BODY_LIMIT_JSON=1mb
# BODY_LIMIT_URLENCODED=1mb

# --- Swagger и proxy (prod) ---
# В prod Swagger по умолчанию отключён. Включить можно флагом ниже
# 0 — выкл, 1 — вкл
# SWAGGER_ENABLED=0
# Если приложение работает за reverse proxy/ingress, включите доверие заголовкам X-Forwarded-*
# 0 — выкл, 1 — вкл
TRUST_PROXY=0